datasource db {
  provider = "sqlite"
  url      = "file:dev.db"
}

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/@prisma/client/gameData"
}

model TravelRoute {
  id       String @id @default(cuid())
  from     String
  to       String
  distance Int

  Place   Place  @relation(fields: [placeId], references: [id])
  placeId String

  @@unique([from, to])
}

model Place {
  id           String        @id @default(cuid())
  name         String
  travelRoutes TravelRoute[]
}

model Journey {
  id       String @id @default(cuid())
  from     String
  to       String
  distance Int

  GameData   GameData? @relation(fields: [gameDataId], references: [id])
  gameDataId String?
}

model GameData {
  id                    String   @id @default(cuid())
  userId                String   @unique
  currentPlaceId        String
  lastComputedTimestamp DateTime @default(now())
  helpWanted            Boolean

  journeys    Journey[]
  adventurers Adventurer[]
  enemies     Character[]
}

model Equipment {
  id      String @id @default(cuid())
  name    String
  type    String
  health  Int
  attack  Int
  defense Int

  buff Buff[]

  Adventurer   Adventurer? @relation(fields: [adventurerId], references: [id])
  adventurerId String?
}

model Character {
  id          String    @id @default(cuid())
  name        String
  health      Int
  attack      Int
  defense     Int
  actionPoint Int
  GameData    GameData? @relation(fields: [gameDataId], references: [id])
  gameDataId  String?
}

model Adventurer {
  id          String @id @default(cuid())
  name        String
  health      Int
  attack      Int
  defense     Int
  pointUp     Int
  actionPoint Int

  equipments Equipment[]

  GameData   GameData? @relation(fields: [gameDataId], references: [id])
  gameDataId String?
}

model Buff {
  id   String @id @default(cuid())
  name String

  equipments Equipment[]
}
